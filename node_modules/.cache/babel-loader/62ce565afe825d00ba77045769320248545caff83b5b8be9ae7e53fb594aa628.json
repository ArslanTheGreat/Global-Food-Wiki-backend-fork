{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danye\\\\global-food-wiki\\\\my-app\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar({\n  data\n}) {\n  _s();\n  //Holds user text input and values matching query\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  //Updates query state with current text\n  const handleChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n\n    // Filter 5 suggestions based on input & resets to empty array when cleared\n    if (input.length > 0) {\n      const filtered = data.filter(item => item.toLowerCase().includes(input.toLowerCase()));\n      setSuggestions(filtered.slice(0, 5)); // Limit to 5 suggestions\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  //Reset &clear suggestion list\n  const handleSelect = value => {\n    setQuery(value);\n    setSuggestions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    style: {\n      position: 'relative',\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleChange,\n      placeholder: \"Search Dish Name\",\n      className: \"search-input\",\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-dropdown\",\n      children: suggestions.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelect(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"wdpuE1R4Ew8YwtN5g+LOgvnqf+I=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","data","_s","query","setQuery","suggestions","setSuggestions","handleChange","e","input","target","value","length","filtered","filter","item","toLowerCase","includes","slice","handleSelect","className","style","position","flex","children","type","onChange","placeholder","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/danye/global-food-wiki/my-app/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function SearchBar({ data }) {\r\n  //Holds user text input and values matching query\r\n    const [query, setQuery] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n//Updates query state with current text\r\n  const handleChange = (e) => {\r\n    const input = e.target.value;\r\n    setQuery(input);\r\n\r\n    // Filter 5 suggestions based on input & resets to empty array when cleared\r\n    if (input.length > 0) {\r\n      const filtered = data.filter((item) =>\r\n        item.toLowerCase().includes(input.toLowerCase())\r\n      );\r\n      setSuggestions(filtered.slice(0, 5)); // Limit to 5 suggestions\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  //Reset &clear suggestion list\r\n  const handleSelect = (value) => {\r\n    setQuery(value);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\" style={{ position: 'relative', flex: 1 }}>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={handleChange}\r\n        placeholder=\"Search Dish Name\"\r\n        className=\"search-input\"\r\n        autoComplete=\"off\"\r\n      />\r\n\r\n      {/* drop down list of suggestions */}\r\n      {suggestions.length > 0 && (\r\n        <ul className=\"suggestions-dropdown\">\r\n          {suggestions.map((item, index) => (\r\n          <li key={index} onClick={() => handleSelect(item)}>\r\n          {item}\r\n         </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC1C;EACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACE,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BP,QAAQ,CAACK,KAAK,CAAC;;IAEf;IACA,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,QAAQ,GAAGZ,IAAI,CAACa,MAAM,CAAEC,IAAI,IAChCA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,CAAC,CAAC,CACjD,CAAC;MACDV,cAAc,CAACO,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACLZ,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMa,YAAY,GAAIR,KAAK,IAAK;IAC9BP,QAAQ,CAACO,KAAK,CAAC;IACfL,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACnEzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXd,KAAK,EAAER,KAAM;MACbuB,QAAQ,EAAEnB,YAAa;MACvBoB,WAAW,EAAC,kBAAkB;MAC9BP,SAAS,EAAC,cAAc;MACxBQ,YAAY,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAGD3B,WAAW,CAACO,MAAM,GAAG,CAAC,iBACrBb,OAAA;MAAIqB,SAAS,EAAC,sBAAsB;MAAAI,QAAA,EACjCnB,WAAW,CAAC4B,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBAC7BnC,OAAA;QAAgBoC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACJ,IAAI,CAAE;QAAAS,QAAA,EACjDT;MAAI,GADImB,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CAlDuBF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}